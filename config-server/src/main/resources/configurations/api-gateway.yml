server:
  port: 8222

spring:
  main:
    web-application-type: reactive

  application:
    name: api-gateway
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD:}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      security:
        rules:
          - path: /api/media/get/**
            method: [GET]
            access: [PUBLIC]
          - path: /api/admin/**
            method: [ANY]
            access: [ADMIN]
          - path: /api/verify-requests/**
            method: [GET, DELETE, PATCH]
            access: [ADMIN, CVA]

      routes:

        # ================= USER SERVICE =================
        - id: user-service-docs
          uri: lb://user-service
          predicates:
            - Path=/api/users/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        - id: user-service-auth
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**

        - id: user-service-users
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - JwtAuthenticationFilter

        - id: user-service-customer
          uri: lb://user-service
          predicates:
            - Path=/api/customer/**
          filters:
            - JwtAuthenticationFilter


        # ================= VEHICLE SERVICE =================
        - id: vehicle-service-docs
          uri: lb://vehicle-service
          predicates:
            - Path=/api/vehicles/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        - id: vehicle-service-vehicles
          uri: lb://vehicle-service
          predicates:
            - Path=/api/vehicles/**
          filters:
            - JwtAuthenticationFilter

        - id: journey-service
          uri: lb://vehicle-service
          predicates:
            - Path=/api/journeys/**
          filters:
            - JwtAuthenticationFilter


        # ================= MEDIA SERVICE =================
        - id: media-service-docs
          uri: lb://media-service
          predicates:
            - Path=/api/media/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        - id: media-service-media
          uri: lb://media-service
          predicates:
            - Path=/api/media/**
          filters:
            - JwtAuthenticationFilter


        # ================= WALLET SERVICE =================
        - id: wallet-service-docs
          uri: lb://wallet-service
          predicates:
            - Path=/api/wallet/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        - id: wallet-service-wallet
          uri: lb://wallet-service
          predicates:
            - Path=/api/wallet/**
          filters:
            - JwtAuthenticationFilter

        - id: wallet-service-carbon-credit
          uri: lb://wallet-service
          predicates:
            - Path=/api/carbon-credit/**
          filters:
            - JwtAuthenticationFilter

        - id: wallet-service-audit
          uri: lb://wallet-service
          predicates:
            - Path=/api/audit/**
          filters:
            - JwtAuthenticationFilter


        # ================= VERIFICATION SERVICE =================
        - id: verification-service-docs
          uri: lb://verification-service
          predicates:
            - Path=/api/verify-requests/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        - id: verification-service
          uri: lb://verification-service
          predicates:
            - Path=/api/verify-requests/**
          filters:
            - JwtAuthenticationFilter


      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      # Default Filters
      default-filters:
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
            methods: GET,POST
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - AddResponseHeader=X-Response-Time, ${responseTime}
        - RemoveRequestHeader=Cookie

    # Load Balancer Configuration
    loadbalancer:
      ribbon:
        enabled: false
      cache:
        enabled: true
        ttl: 30s
        capacity: 256

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    urls:
      - name: User Service
        url: /api/users/v3/api-docs  # Đổi lại thành /api/users/v3/api-docs
      - name: Vehicle Service
        url: /api/vehicles/v3/api-docs
      - name: Media Service
        url: /api/media/v3/api-docs
      - name: Wallet Service
        url: /api/wallet/v3/api-docs
      - name: Verification Service
        url: /api/verify-requests/v3/api-docs
    urls-primary-name: User Service
    operationsSorter: method
    tagsSorter: alpha
    api-docs:
      enabled: true

app:
  security:
    jwt:
      access-expires-at: 3600000
      refresh-expires-at: 604800000
      prefix: "Bearer "
      auth-header: "Authorization"
      access-secret: mysupersecret
      refresh-secret: myrefreshsecret
# Gateway Cache Configuration
gateway:
  cache:
    enabled: true
    ttl: 300  # 5 minutes
    max-size: 1000

# Service URLs (if not using service discovery)
service:
  user:
    url: http://localhost:8081

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus  # Expose prometheus endpoint
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    health:
      show-details: always
    gateway:
      access: unrestricted

