server:
  port: 8222

spring:
  application:
    name: api-gateway
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD:}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # ========== USER SERVICE ==========

        # Route cho OpenAPI docs - Pattern 1
        - id: user-service-docs-1
          uri: lb://user-service
          predicates:
            - Path=/user-service/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        # Route cho OpenAPI docs - Pattern 2 (cho Swagger UI mặc định)
        - id: user-service-docs-2
          uri: lb://user-service
          predicates:
            - Path=/api/users/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        # Route cho authentication
        - id: user-service-auth
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**

        # Route cho users - ĐẶT SAU CÙNG
        - id: user-service-users
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
        - id: user-service-customer
          uri: lb://user-service
          predicates:
          - Path=/api/customer/**
        # ========== VEHICLE SERVICE ==========

        # Route cho OpenAPI docs - Pattern 1
        - id: vehicle-service-docs-1
          uri: lb://vehicle-service
          predicates:
            - Path=/vehicle-service/v3/api-docs
          filters:
            - SetPath=/v3/api-docs

        # Route cho OpenAPI docs - Pattern 2 (cho Swagger UI mặc định)
        - id: vehicle-service-docs-2
          uri: lb://vehicle-service
          predicates:
            - Path=/api/vehicles/v3/api-docs
          filters:
            - SetPath=/v3/api-docs
        # Route cho vehicle
        - id: vehicle-service-vehicles
          uri: lb://vehicle-service
          predicates:
          - Path=/api/vehicles/**
          filters:
            - JwtAuthenticationFilter
        - id: vehicle-service-types
          uri: lb://vehicle-service
          predicates:
            - Path=/api/vehicle-types/**
          filters:
            - JwtAuthenticationFilter
        # Route cho journey
        - id: vehicle-service-journey
          uri: lb://vehicle-service
          predicates:
            - Path=/api/vehicles/**
          filters:
            - JwtAuthenticationFilter
        - id: vehicle-service-types
          uri: lb://vehicle-service
          predicates:
            - Path=/api/journeys/**
          filters:
            - JwtAuthenticationFilter

      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      # Default Filters
      default-filters:
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
            methods: GET,POST
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - AddResponseHeader=X-Response-Time, ${responseTime}
        - RemoveRequestHeader=Cookie

    # Load Balancer Configuration
    loadbalancer:
      ribbon:
        enabled: false
      cache:
        enabled: true
        ttl: 30s
        capacity: 256

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    urls:
      - name: User Service
        url: /api/users/v3/api-docs  # Đổi lại thành /api/users/v3/api-docs
      - name: Vehicle Service
        url: /api/vehicles/v3/api-docs
    urls-primary-name: User Service
    operationsSorter: method
    tagsSorter: alpha
    api-docs:
      enabled: true

app:
  security:
    jwt:
      access-expires-at: 3600000
      refresh-expires-at: 604800000
      prefix: "Bearer "
      auth-header: "Authorization"
      access-secret: mysupersecret
      refresh-secret: myrefreshsecret
# Gateway Cache Configuration
gateway:
  cache:
    enabled: true
    ttl: 300  # 5 minutes
    max-size: 1000

# Service URLs (if not using service discovery)
service:
  user:
    url: http://localhost:8081

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG